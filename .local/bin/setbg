#!/bin/sh

# This script does the following:
#	Run by itself, set the wallpaper (at X start).
#	If given a file, set that as the new wallpaper.
#	If given a directory, choose random file in it.
#	If wal is installed, also generate a colorscheme.
# chmod the /usr/share/pixmaps/wall folder if you want a wallpaper for lightdm
# Location of link to wallpaper link.
bgloc="${XDG_CACHE_HOME:-$HOME/.cache/}/bg"

# Check if symlink already exists, otherwise use the default wallpaper for KARBS
[ ! -f "$bgloc" ] && ln -sf "$HOME/Pictures/default.jpg" "$bgloc" && cp "$HOME/Pictures/default.jpg" "/usr/share/pixmaps/wall/bg"

[ -f "$1" ] && ln -sf "$(readlink -f "$1")" "$bgloc"  && ln -sf "$(readlink -f "$1")" "$HOME/.config/awesome/themes/xresources/bg.png " && cp  "$(readlink -f "$1")" "/usr/share/pixmaps/wall/bg" && notify-send -i "$bgloc" "Changing wallpaper..."

# Random Wallpaper showing
[ -d "$1" ] && ln -sf "$(find "$(readlink -f "$1")" -iregex '.*.\(jpg\|jpeg\|png\|gif\)' -type f | shuf -n 1)" "$bgloc" && notify-send -i "$bgloc" "Random Wallpaper chosen."

# Check if WPGTK icons and gtk theme is installed, if not, install
[ ! -f "$HOME/.local/share/themes/FlatColor/index.theme" ] && wpg-install.sh -ig 

# If pywal is installed, use it.
wal -s -i "$(readlink -f "$bgloc")" -o "${XDG_CONFIG_HOME:-$HOME/.config}/wal/postrun" >/dev/null 2>&1
# Creates a gtk theme using wpgtk and copies it to /usr/share for lightdm
wpg -i "$(readlink -f "$bgloc")" ~/.cache/wal/colors.json
wpg -s "$(readlink -f "$bgloc")" && cp -r $HOME/.local/share/themes/FlatColor/* /usr/share/themes/FlatColor/
# Refresh Icon Cache while gui apps open
gtk-update-icon-cache -f -t ~/.local/share/icons/flattrcolor
# Automaticaly refresh dwmbar using a simulated keypress 
pidof dwm >/dev/null && xdotool key super+shift+F5
# Set wallpaper for awesome wm
#echo 'awesome.restart()' | awesome-client 
xwallpaper --zoom "$bgloc"
# Restart qtile 
qtile-cmd -o cmd -f restart >/dev/null 2>&1
