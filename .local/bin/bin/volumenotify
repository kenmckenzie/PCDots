#!/bin/bash
# changeVolume script, pulseaudio and pamixer required
# Bind this to your media keys for volume control with notifications 
# Arbitrary but unique message id
msgId="991049"

# Change the volume using pactl
pactl set-sink-volume @DEFAULT_SINK@ "$@" > /dev/null

# Query pamixer for the current volume and whether or not the speaker is muted
volume="$(pamixer --get-volume)"
mute="$(pamixer  --get-mute)"
# If @ 100 % , keep it from going over to avoid clipping 
# Todo, clear notifications first to avoid it repeating itself 
if [[ $volume -gt 100 ]]; then 
pactl set-sink-volume @DEFAULT_SINK@ 100% > /dev/null && notify-send "Volume Maxed" 


elif [[ $volume == 0 || "$mute" == "true" ]]; then
    # Show the sound muted notification
    dunstify -a "changeVolume" -u low -i audio-volume-muted -r "$msgId" "Volume muted" 
else
    # Show the volume notification
    dunstify -a "changeVolume" -u low -i audio-volume-high -r "$msgId" \
    "Volume: ${volume}%" "$(getProgressString 10 "<b> </b>" " " $volume)"
fi

