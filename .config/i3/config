# i3 config file (Re written desktop config)
# Ken McKenzie aka UlverZA
# ulverza@protonmail.com

# Window key as mod key
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:Hack Nerd Font 11

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 1
new_float normal

# Hide borders
hide_edge_borders none

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
 
# Setup for my dual monitors
exec --no-startup-id xrandr - --output HDMI-A-0 --auto --primary --output DVI-D-0 --auto --right-of HDMI-A-0

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status

# Used with wpgtk to reload gtk without restarting the applet
exec --no-startup-id xsettingsd 

# Volume control via media keys
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% #&& $refresh_i3status
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% #&& $refresh_i3status
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

bindsym XF86AudioRaiseVolume exec --no-startup-id volumenotify +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id volumenotify -5% && $refresh_i3status
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Spotify Media Keys (Only works on spotify and spotifyd)
bindsym XF86AudioPlay exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause || playerctl -p spotifyd play-pause
bindsym XF86AudioNext exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next || playerctl -p spotifyd next
bindsym XF86AudioPrev exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous || playerctl -p spotifyd previous

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec st

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
 bindsym $mod+Ctrl+d exec ~/.local/bin/dmen.sh

# Rofi Startup, run mode for quick startup
bindsym $mod+d exec --no-startup-id "rofi -modi 'window,run,ssh,drun' -show run"  

# Custom menu using rofi, script in scripts folder
bindsym $mod+z exec --no-startup-id rofimenu

# Set sxiv script when open to floating
for_window [title="sxiv"] floating enable

# Open applications on specific workspaces
assign [class="Spotify"] $ws2
for_window [class="Spotify"] move to workspace $ws4
# Open specific applications in floating mode
for_window [title="pavucontol"] floating enable border pixel 1
for_window [class="Clipgrab"] floating enable
for_window [title="File Transfer*"] floating enable
for_window [class="Galculator"] floating enable border pixel 1
# testing
for_window [class="Calc"] floating enable border pixel 1
for_window [class="GParted"] floating enable border normal
for_window [class="Lightdm-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Manjaro-hello"] floating enable
for_window [class="Manjaro Settings Manager"] floating enable border normal
for_window [title="MuseScore: Play Panel"] floating enable
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Oblogout"] fullscreen enable
for_window [class="octopi"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="blueman-manager"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="Skype"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="Lutris"] floating enable
# steam shit
for_window [class="^Steam$" title="^Friends List$"] floating enable
for_window [class="^Steam$" title="Steam - Update News"] floating enable
for_window [class="^Steam$" title=".* - Chat"] floating enable
for_window [class="^Steam$" title="^Settings$"] floating enable
for_window [class="^Steam$" title=".* - event started"] floating enable
for_window [class="^Steam$" title=".* CD key"] floating enable
for_window [class="^Steam$" title="^Steam - Self Updater$"] floating enable
for_window [class="^Steam$" title="^Screenshot Uploader$"] floating enable
for_window [class="^Steam$" title="Steam"] floating enable
for_window [class="Wpg"] floating enable

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+c split h ; exec notify-send -t 2000 'Horizontal orientation'

# split in vertical orientation
bindsym $mod+v split v ; exec notify-send -t 2000 'Vertical orientation'

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle; exec notify-send -t 2000'Fullscreen Mode'

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking;exec notify-send -t 2000 'Stacking layout'
bindsym $mod+w layout tabbed; exec notify-send -t 2000 'Tabbed layout'
bindsym $mod+e layout toggle split; exec notify-send -t 2000 'Toggle split'

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle; exec notify-send -t 2000 'Toggle floating/tiling'

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:1"
set $ws2 "2:2"
set $ws3 "3:3"
set $ws4 "4:4"
set $ws5 "5:5"
set $ws6 "6:6"
set $ws7 "7:7"
set $ws8 "8:8"
set $ws9 "9:9"
#set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
#bindsym $mod+0 workspace number $ws10


# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws8; workspace $ws9



# Move workspaces to specific monitors
workspace 1 output HDMI-A-0
workspace 2 output DVI-D-0
workspace 3 output HDMI-A-0
workspace 4 output DVI-D-0
workspace 5 output HDMI-A-0
workspace 6 output DVI-D-0
workspace 7 output HDMI-A-0
workspace 8 output DVI-D-0


# reload the configuration file
bindsym $mod+Shift+c reload; exec notify-send 'Reload i3 conf file'
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart; exec notify-send 'Restart i3 inplace'
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available) Disabled as I use polybar
#bar {
#        status_command i3status
#}


## Manual management of external displays
# Set the shortcuts and what they do
# More usefull for laptop setups but included on desktop in case
set $mode_display Ext Screen (v) VGA ON, (h) HDMI ON, (x) VGA OFF, (y) HDMI OFF, (z) LAPTOP SCREEN OFF, (a) LAPTOP SCREEN ON, (s) HDMI Primary ON, (d) VGA Secondary ON
mode "$mode_display" {
    bindsym v exec --no-startup-id xrandr --output DVI-D-0 --auto --right-of LVDS1, mode "default"
    bindsym h exec --no-startup-id xrandr --output HDMI-A-0 --auto --right-of LVDS1, mode "default"
    bindsym x exec --no-startup-id xrandr --output DVI-D-0 --auto --off, mode "default"
    bindsym y exec --no-startup-id xrandr --output HDMI-A-0 --auto --off, mode "default"
#    bindsym z exec --no-startup-id xrandr --output LVDS1 --auto --off, mode "default"
#    bindsym a exec --no-startup-id xrandr --output LVDS1 --auto --primary, mode "default"
    bindsym s exec --no-startup-id xrandr --output HDMI-A-0 --auto --primary --output VGA1 --auto --right-of HDMI-A-0, mode "default"
    bindsym d exec --no-startup-id xrandr --output DVI-D-0 --auto --right-of HDMI-A-0, mode "default"                   
    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# Declare here the shortcut to bring the display selection menu
bindsym $mod+x mode "$mode_display"

# Autostart Applications + Services 
#exec_always --no-startup-id spotifyd --no-daemon
# Wallpaper setter + Compositor(For Transparency and screen tearing) and startup of pywal on boot (set a wallpaper with setbg first)
exec_always --no-startup-id picom -b
exec_always --no-startup-id setbg
exec_always --no-startup-id wal -R
# Dunst for Notifications 
exec_always --no-startup-id dunst
# Polkit Authentication
exec_always --no-startup-id lxpolkit
# Bluetooth, audio and networkmanager on bar
exec --no-startup-id blueman-applet
exec --no-startup-id pa-applet
exec --no-startup-id nm-applet

# Locks computer after 360 min ( Requires xautolock installed!)
exec --no-startup-id xautolock -time 360 -locker blurlock

#Todo (Add conky and polybar cause i3bar sux)
exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec_always --no-startup-id $HOME/.local/bin/startconkyi3.sh

# Keyboard Startup Shortcuts 
bindsym $mod+F2 exec brave
bindsym $mod+F3 exec thunar
bindsym $mod+Ctrl+F3 exec ranger
bindsym $mod+F4 exec code # visual studio code
bindsym $mod+Shift+F3 exec gksu thunar # thunar as root
bindsym $mod+t exec --no-startup-id "pkill picom; exec notify-send 'killing compositor!'
bindsym $mod+Ctrl+t exec --no-startup-id "picom -b; exec notify-send 'Starting compositor!'
bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'" 
bindsym Print exec --no-startup-id i3-scrot #Take Screenshot

# Set shut down, restart and locking 
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}



#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 14
gaps outer -2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"
#
#
mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use 
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources.
set_from_resource $fg i3wm.color5 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0

# class                 border  backgr. text indicator child_border
client.focused          $bg     $bg     $fg  $bg       $fg
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg


